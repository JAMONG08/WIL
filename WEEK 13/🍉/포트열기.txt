
인바운드(Inbound)	
- 내부를 향함
- 서버 내부로 들어오는 것
- 서버 또는 네트워크 내부로 인입
- 클라이언트 -> 서버
- 클라이언트가 업로드할 때, 웹페이지 접속

아웃바운드(Outbound)
 외부를 향함
- 서버 외부로 나가는 것
- 서버 또는 네트워크 존 외부로 송출
- 서버 -> 클라이언트
- 클라이언트가 다운로드할 때

※인바운드 규칙
- Windows 방화벽 기본 설정 : 모든 접속 차단
- 자신의 컴퓨터로 들어오기 시작하는 네트워크 데이터	- 외부를 향함
- 서버 외부로 나가는 것
- 서버 또는 네트워크 존 외부로 송출
- 서버 -> 클라이언트
- 클라이언트가 다운로드할 때

※아웃바운드 규칙   -> 80 
- Windows 방화벽 기본 설정 : 모든 접속 허용
- 자신의 컴퓨터에서 나가기 시작하는 네트워크 데이터

80 
a           <---> B 
outbound 80     inbound 80

A내 서버 B 남서버 
B서버에서 A서버의 8888포트 접속시 : B > A/8888 요청

* 클라우드 서비스 - 가변포트

==========================
기본 서버 설정
인바운드 80, 443, 21, 22, 5432 외 제한
:웹페이지는 들어와라
아웃바운드 21(FTP), 22(SSH), 23(파일전송) 제한=>보안에 중요한 포트들! 

========================
열려있는 포트 확인
netstat -nap | grep LISTEN

특정 호스트의 특정 포트 확인
nc -z 123.123.123.123 80
telnet 123.123.123.123 80


============================
터널링 
1. ssh 로 연결 
2. tunnel 설정에 포트 입력 후 ADD
    source port : 30000 내가 연결할 포트 (로컬 포트 중 겹치지 않게 설정)
    Destination : test.com:3306 (목적서버:포트번호)
ssl -L 3000 123.123.123.123:3306 root@134.134.145.145
netstat -nap | grep 30000
https://dololak.tistory.com/29

127.0.0.1:3306 mysql 서버가 띄어져 있음!
================================
프록시패스
- 리버스 프록시 환경 구축 : 웹 서비스의 IP를 외부 사용자로부터 감추기 위해 사용
- 로드 밸런싱 기능으로 트래픽을 분산 : 서버 가용성 높이기 

https://thingsthis.tistory.com/322

LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so

extra/conf/vhosts.conf

<VirtualHost *:80>
  ServerAdmin site1.com
  ServerName  site1.com 
  ProxyRequests off
  ProxyPreserveHost On
  <Location />
    ProxyPass http://site1.com:30000/ acquire=3000 timeout=600 Keepalive=On
    ProxyPassReverse http://site1.com:30000/
  </Location>
</VirtualHost>

-proxyrequest off 설정시 리버스는 꺼짐
-keepalive : 사용자로부터 연결된 port 유지하여 동일한사용자 요청을 처리하는 옵션
            요청마다 port 새로 연결하는 것은 비효율
-timeout: 설정값 초과시 close 


